#!/bin/sh

abort() {
  exit $?
}

# Exit on error
trap abort ERR

# Colors
green='\033[32m'
default='\033[0m'

message() {
  printf "${green}%s${default}\n" "${*}"
}

# Variables
branch=$(git rev-parse --abbrev-ref HEAD)
revision=$(git rev-parse HEAD)
revision_short=$(git rev-parse --short HEAD)

message Cleaning…
make clean

message Cloning remote into Public/
git clone git@github.com:alexherbo2/alexherbo2.github.io public

message Removing previous build commits before deploying…
cd public
GIT_EDITOR="sed -i '/^pick .* Build/d'" \
git rebase --root --interactive
cd -

message Building the site…
make build

message Deploying updates to GitHub…
cd public
git add .
git commit --file - <<EOF
Build $branch/$revision_short

https://github.com/alexherbo2/website/commit/$revision
EOF
git push --force

message Successfully built $branch/$revision_short
message https://github.com/alexherbo2/website/commit/$revision
